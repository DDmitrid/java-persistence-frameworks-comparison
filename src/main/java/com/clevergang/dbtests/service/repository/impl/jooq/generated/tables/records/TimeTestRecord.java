/**
 * This class is generated by jOOQ
 */
package com.clevergang.dbtests.service.repository.impl.jooq.generated.tables.records;


import com.clevergang.dbtests.service.repository.impl.jooq.generated.tables.TimeTest;

import java.sql.Timestamp;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.Record2;
import org.jooq.Row2;
import org.jooq.impl.TableRecordImpl;


/**
 * This class is generated by jOOQ.
 */
@Generated(
	value = {
		"http://www.jooq.org",
		"jOOQ version:3.7.2"
	},
	comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class TimeTestRecord extends TableRecordImpl<TimeTestRecord> implements Record2<Timestamp, Timestamp> {

	private static final long serialVersionUID = -396629661;

	/**
	 * Setter for <code>public.time_test.ts</code>.
	 */
	public void setTs(Timestamp value) {
		setValue(0, value);
	}

	/**
	 * Getter for <code>public.time_test.ts</code>.
	 */
	public Timestamp getTs() {
		return (Timestamp) getValue(0);
	}

	/**
	 * Setter for <code>public.time_test.ts_default</code>.
	 */
	public void setTsDefault(Timestamp value) {
		setValue(1, value);
	}

	/**
	 * Getter for <code>public.time_test.ts_default</code>.
	 */
	public Timestamp getTsDefault() {
		return (Timestamp) getValue(1);
	}

	// -------------------------------------------------------------------------
	// Record2 type implementation
	// -------------------------------------------------------------------------

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Row2<Timestamp, Timestamp> fieldsRow() {
		return (Row2) super.fieldsRow();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Row2<Timestamp, Timestamp> valuesRow() {
		return (Row2) super.valuesRow();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Field<Timestamp> field1() {
		return TimeTest.TIME_TEST.TS;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Field<Timestamp> field2() {
		return TimeTest.TIME_TEST.TS_DEFAULT;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Timestamp value1() {
		return getTs();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Timestamp value2() {
		return getTsDefault();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public TimeTestRecord value1(Timestamp value) {
		setTs(value);
		return this;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public TimeTestRecord value2(Timestamp value) {
		setTsDefault(value);
		return this;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public TimeTestRecord values(Timestamp value1, Timestamp value2) {
		value1(value1);
		value2(value2);
		return this;
	}

	// -------------------------------------------------------------------------
	// Constructors
	// -------------------------------------------------------------------------

	/**
	 * Create a detached TimeTestRecord
	 */
	public TimeTestRecord() {
		super(TimeTest.TIME_TEST);
	}

	/**
	 * Create a detached, initialised TimeTestRecord
	 */
	public TimeTestRecord(Timestamp ts, Timestamp tsDefault) {
		super(TimeTest.TIME_TEST);

		setValue(0, ts);
		setValue(1, tsDefault);
	}
}
